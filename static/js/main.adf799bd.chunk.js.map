{"version":3,"sources":["components/card/card.component.jsx","components/images-container/images-container.component.jsx","App.js","index.js","rocket.svg"],"names":["Card","_ref","card","saveFavorite","removeFavorite","favoritPage","_useState","useState","_useState2","Object","slicedToArray","isAdded","setIsAdded","copyright","date","explanation","hdurl","title","url","react_default","a","createElement","className","href","target","src","alt","loading","onClick","ImagesContainer","cards","map","card_component","key","App","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","loadTimes","setLoadTimes","_useState7","_useState8","countImages","_useState9","_useState10","apiKey","_useState11","concat","_useState12","apiURL","setApiURL","_useState13","_useState14","apodData","setApodData","_useState15","_useState16","isFavoritesPage","setIsFavoritesPage","_useState17","_useState18","favorites","setFavorites","_useState19","_useState20","showAdded","setShowAdded","_useState21","_useState22","showRemoved","setShowRemoved","_useState23","_useState24","hideConfirmation","setHideConfirmation","useEffect","nasaFavorites","JSON","parse","localStorage","getItem","setItem","stringify","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","resultsArray","wrap","_context","prev","next","fetch","sent","ok","Error","status","json","t0","message","finish","stop","interval","setInterval","clearInterval","loadMore","findIndex","isNewFavorite","find","toConsumableArray","newFavorites","filter","Fragment","rocket","id","images_container_component","container","document","getElementById","createRoot","render","src_App_0","tab","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.adf799bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n\n\nconst Card = ({ card, saveFavorite, removeFavorite, favoritPage }) => {\n  const [isAdded, setIsAdded] = useState(favoritPage);\n\n  const { copyright, date, explanation, hdurl, title, url } = card;\n  return (\n    <div className=\"card\">\n      <a href={hdurl} title=\"View Full Image\" target=\"_blank\">\n        <img\n          src={url}\n          alt=\"NASA Picture of the Day\"\n          className=\"card-img-top\"\n          loading=\"lazy\"\n        />\n      </a>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        {isAdded ? (\n          <p\n            className=\"clickable\"\n            onClick={() => {\n              removeFavorite(url);\n              setIsAdded(false);\n            }}\n          >\n            Remove Favorite\n          </p>\n        ) : (\n          <p\n            className=\"clickable\"\n            onClick={() => {\n              saveFavorite(url);\n              setIsAdded(true);\n            }}\n          >\n            Add to Favorites\n          </p>\n        )}\n        <p className=\"card-text\">{explanation}</p>\n        <small className=\"text-muted\">\n          <strong>{date} </strong>\n          <span>{copyright}</span>\n        </small>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import React from \"react\";\nimport Card from \"../card/card.component\";\n\nconst ImagesContainer = ({\n  cards,\n  saveFavorite,\n  removeFavorite,\n  favoritPage,\n}) => {\n  return (\n    <div className=\"images-container\">\n      {cards.map((card) => (\n        <Card\n          card={card}\n          key={card.url}\n          saveFavorite={saveFavorite}\n          removeFavorite={removeFavorite}\n          favoritPage={favoritPage}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ImagesContainer;","import React, { useState, useEffect } from 'react';\nimport rocket from './rocket.svg';\nimport './App.css';\nimport ImagesContainer from \"./components/images-container/images-container.component\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [loadTimes, setLoadTimes] = useState(0);\n  const [countImages, setCountImages] = useState(10);\n  const [apiKey, setApiKey] = useState('DEMO_KEY');\n  const [apiURL, setApiURL] = useState(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=${countImages}`);\n  const [apodData, setApodData] = useState([]);\n  const [isFavoritesPage, setIsFavoritesPage] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [showAdded, setShowAdded] = useState(false);\n  const [showRemoved, setShowRemoved] = useState(false);\n  const [hideConfirmation, setHideConfirmation] = useState(() => () => {});\n  \n\n  useEffect(() => {\n    const nasaFavorites = JSON.parse(localStorage.getItem('nasaFavorites'));\n    if (nasaFavorites) {\n      setFavorites(nasaFavorites);\n    }\n  }, []);\n  \n  useEffect(() => {\n    localStorage.setItem('nasaFavorites', JSON.stringify(favorites))\n  }, [favorites]);\n\n  useEffect(() => {\n    setApiURL(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=${countImages}`);\n  }, [countImages, apiKey]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(apiURL);\n        const resultsArray = await ((response) => {\n          if (!response.ok) {\n            throw new Error(\n              `This is an HTTP error: The status is ${response.status}`\n            );\n          }\n          return response.json();\n        })(response);\n        setApodData(resultsArray);\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n        setApodData([]);\n      } finally {\n        setIsLoading(false)\n      }\n    })();\n  }, [loadTimes]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      hideConfirmation();\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [hideConfirmation]);\n\n\n  const loadMore = () => {\n    setLoadTimes((prev) => prev + 1);\n  };\n\n  const isNewFavorite = (url) => {\n    const index = favorites.findIndex(card => card.url === url);\n    return index === -1;\n  }\n\n  const saveFavorite = (url) => {\n    if (isNewFavorite(url)) {\n      const card = apodData.find(card => card.url === url);\n      setFavorites((prev) => {\n        return [...prev, card];\n      });\n      setShowAdded(true);\n      setShowRemoved(false);\n      setHideConfirmation(() => () => {\n        setShowAdded(false);\n      });\n    };\n  };\n\n  const removeFavorite = (url) => {\n    const newFavorites = favorites.filter(card => card.url !== url)\n    setFavorites(newFavorites);\n    setShowAdded(false);\n    setShowRemoved(true);\n    setHideConfirmation(() => () => {\n      setShowRemoved(false);\n    });\n  }\n\n\n  return (\n    <React.Fragment>\n      {\n      isLoading \n      ?\n        <div className=\"loader\">\n          <img src={rocket} alt=\"Rocket Loading Animation\" />\n        </div>\n      :\n      error\n      ?\n        <div>{`There is a problem fetching the post data - ${error}`}</div>\n      :\n        <>\n          <div className=\"container\">\n            <div className=\"navigation-container\">\n              <span className=\"background\"></span>\n              {\n                isFavoritesPage\n                ?\n                <span className=\"navigation-items\" id=\"favoritesNav\">\n                  <h3 className=\"clickable\" onClick={() => {\n                    setIsFavoritesPage(false)\n                  }}>Go Back</h3>\n                  <h3>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;</h3>\n                  <h3 className=\"clickable\" onClick={() => {\n                    loadMore()\n                    setIsFavoritesPage(false)\n                  }}>Load More NASA Images</h3>\n                </span>\n                :\n                <span className=\"navigation-items\" id=\"resultsNav\">\n                  <h3 className=\"clickable\" onClick={() => {\n                    setIsFavoritesPage(true)\n                  }}>Favorites</h3>\n                  <h3>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;</h3>\n                  <h3 className=\"clickable\" onClick={loadMore}>Load More NASA Images</h3>\n                </span>\n                }\n            </div>\n            {\n              isFavoritesPage\n              ?\n              < ImagesContainer cards = {\n              favorites\n              }\n              saveFavorite = {\n                saveFavorite\n              }\n              removeFavorite = {\n                removeFavorite\n              }\n              favoritPage = {\n                true\n              }\n              />\n              :\n              < ImagesContainer cards = {\n                apodData\n              }\n              saveFavorite = {\n                saveFavorite\n              }\n              removeFavorite = {\n                removeFavorite\n              }\n              favoritPage = {\n                false\n              }\n              />\n            }\n          </div>\n          { showAdded &&\n          <div className=\"confirmed\">\n            <h1>ADDED!</h1>\n          </div>\n          }\n          { showRemoved &&\n          <div className=\"confirmed\">\n            <h1>REMOVED!</h1>\n          </div>\n          }\n        </>\n      }\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\nroot.render( < App tab=\"home\" / > );","module.exports = __webpack_public_path__ + \"static/media/rocket.db37a521.svg\";"],"sourceRoot":""}