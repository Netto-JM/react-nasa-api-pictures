{"version":3,"sources":["components/card/card.component.jsx","components/images-container/images-container.component.jsx","App.js","index.js","rocket.svg"],"names":["Card","_ref","card","saveFavorite","removeFavorite","isTheFavoritesPage","isNewFavorite","_useState","useState","_useState2","Object","slicedToArray","isAdded","setIsAdded","copyright","date","explanation","hdurl","title","url","useEffect","isNotNewFavorite","react_default","a","createElement","className","href","target","src","alt","loading","onClick","ImagesContainer","props","cards","map","card_component","key","App","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","loadTimes","setLoadTimes","_useState7","_useState8","countImages","_useState9","_useState10","apiKey","_useState11","concat","_useState12","apiURL","setApiURL","_useState13","_useState14","apodData","setApodData","_useState15","_useState16","setIsTheFavoritesPage","_useState17","_useState18","favorites","setFavorites","_useState19","_useState20","showAdded","setShowAdded","_useState21","_useState22","showRemoved","setShowRemoved","_useState23","_useState24","hideConfirmation","setHideConfirmation","nasaFavorites","JSON","parse","localStorage","getItem","setItem","stringify","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","resultsArray","wrap","_context","prev","next","fetch","sent","ok","Error","status","json","t0","message","finish","stop","interval","setInterval","clearInterval","loadMore","findIndex","imagesContainerProps","find","toConsumableArray","newFavorites","filter","Fragment","rocket","id","images_container_component","container","document","getElementById","createRoot","render","src_App_0","tab","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.28f11514.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\n\nconst Card = ({\n  card,\n  saveFavorite,\n  removeFavorite,\n  isTheFavoritesPage,\n  isNewFavorite,\n}) => {\n  const [isAdded, setIsAdded] = useState(isTheFavoritesPage);\n  const { copyright, date, explanation, hdurl, title, url } = card;\n\n  useEffect(() => {\n    if (!isTheFavoritesPage) {\n      const isNotNewFavorite = !isNewFavorite(url);\n      setIsAdded(isNotNewFavorite);\n    }\n  }, []);\n\n\n  return (\n    <div className=\"card\">\n      <a href={hdurl} title=\"View Full Image\" target=\"_blank\">\n        <img\n          src={url}\n          alt=\"NASA Picture of the Day\"\n          className=\"card-img-top\"\n          loading=\"lazy\"\n        />\n      </a>\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        {isAdded ? (\n          <p\n            className=\"clickable\"\n            onClick={() => {\n              removeFavorite(url);\n              setIsAdded(false);\n            }}\n          >\n            Remove Favorite\n          </p>\n        ) : (\n          <p\n            className=\"clickable\"\n            onClick={() => {\n              saveFavorite(url);\n              setIsAdded(true);\n            }}\n          >\n            Add to Favorites\n          </p>\n        )}\n        <p className=\"card-text\">{explanation}</p>\n        <small className=\"text-muted\">\n          <strong>{date} </strong>\n          <span>{copyright}</span>\n        </small>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import React from \"react\";\nimport Card from \"../card/card.component\";\n\nconst ImagesContainer = (props) => {\n  return (\n    <div className=\"images-container\">\n      {props.cards.map((card) => (\n        <Card\n          card={card}\n          key={card.url}\n          saveFavorite={props.saveFavorite}\n          removeFavorite={props.removeFavorite}\n          isTheFavoritesPage={props.isTheFavoritesPage}\n          isNewFavorite={props.isNewFavorite}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ImagesContainer;","import React, { useState, useEffect } from 'react';\nimport rocket from './rocket.svg';\nimport './App.css';\nimport ImagesContainer from \"./components/images-container/images-container.component\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [loadTimes, setLoadTimes] = useState(0);\n  const [countImages, setCountImages] = useState(10);\n  const [apiKey, setApiKey] = useState('DEMO_KEY');\n  const [apiURL, setApiURL] = useState(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=${countImages}`);\n  const [apodData, setApodData] = useState([]);\n  const [isTheFavoritesPage, setIsTheFavoritesPage] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [showAdded, setShowAdded] = useState(false);\n  const [showRemoved, setShowRemoved] = useState(false);\n  const [hideConfirmation, setHideConfirmation] = useState(() => () => {});\n  \n\n  useEffect(() => {\n    const nasaFavorites = JSON.parse(localStorage.getItem('nasaFavorites'));\n    if (nasaFavorites) {\n      setFavorites(nasaFavorites);\n    }\n  }, []);\n  \n  useEffect(() => {\n    localStorage.setItem('nasaFavorites', JSON.stringify(favorites))\n  }, [favorites]);\n\n  useEffect(() => {\n    setApiURL(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=${countImages}`);\n  }, [countImages, apiKey]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await fetch(apiURL);\n        const resultsArray = await ((response) => {\n          if (!response.ok) {\n            throw new Error(\n              `This is an HTTP error: The status is ${response.status}`\n            );\n          }\n          return response.json();\n        })(response);\n        setApodData(resultsArray);\n        setError(null);\n      } catch (error) {\n        setError(error.message);\n        setApodData([]);\n      } finally {\n        setIsLoading(false)\n      }\n    })();\n  }, [loadTimes]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      hideConfirmation();\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [hideConfirmation]);\n\n\n  const loadMore = () => {\n    setLoadTimes((prev) => prev + 1);\n  };\n\n  const isNewFavorite = (url) => {\n    const index = favorites.findIndex(card => card.url === url);\n    return index === -1;\n  }\n\n  const saveFavorite = (url) => {\n    if (isNewFavorite(url)) {\n      const card = apodData.find(card => card.url === url);\n      setFavorites((prev) => {\n        return [...prev, card];\n      });\n      setShowAdded(true);\n      setShowRemoved(false);\n      setHideConfirmation(() => () => {\n        setShowAdded(false);\n      });\n    };\n  };\n\n  const removeFavorite = (url) => {\n    const newFavorites = favorites.filter(card => card.url !== url)\n    setFavorites(newFavorites);\n    setShowAdded(false);\n    setShowRemoved(true);\n    setHideConfirmation(() => () => {\n      setShowRemoved(false);\n    });\n  }\n\n  const cards = isTheFavoritesPage ? favorites : apodData;\n\n  const imagesContainerProps = {\n    cards,\n    saveFavorite,\n    removeFavorite,\n    isTheFavoritesPage,\n    isNewFavorite\n  }\n\n  return (\n    <React.Fragment>\n      {\n      isLoading \n      ?\n        <div className=\"loader\">\n          <img src={rocket} alt=\"Rocket Loading Animation\" />\n        </div>\n      :\n      error\n      ?\n        <div>{`There is a problem fetching the post data - ${error}`}</div>\n      :\n        <>\n          <div className=\"container\">\n            <div className=\"navigation-container\">\n              <span className=\"background\"></span>\n              {\n                isTheFavoritesPage\n                ?\n                <span className=\"navigation-items\" id=\"favoritesNav\">\n                  <h3 className=\"clickable\" onClick={() => {\n                    setIsTheFavoritesPage(false)\n                  }}>Go Back</h3>\n                  <h3>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;</h3>\n                  <h3 className=\"clickable\" onClick={() => {\n                    loadMore()\n                    setIsTheFavoritesPage(false)\n                  }}>Load More NASA Images</h3>\n                </span>\n                :\n                <span className=\"navigation-items\" id=\"resultsNav\">\n                  <h3 className=\"clickable\" onClick={() => {\n                    setIsTheFavoritesPage(true)\n                  }}>Favorites</h3>\n                  <h3>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;</h3>\n                  <h3 className=\"clickable\" onClick={loadMore}>Load More NASA Images</h3>\n                </span>\n              }\n            </div>\n            <ImagesContainer {...imagesContainerProps} />\n          </div>\n          { showAdded &&\n          <div className=\"confirmed\">\n            <h1>ADDED!</h1>\n          </div>\n          }\n          { showRemoved &&\n          <div className=\"confirmed\">\n            <h1>REMOVED!</h1>\n          </div>\n          }\n        </>\n      }\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\nroot.render( < App tab=\"home\" / > );","module.exports = __webpack_public_path__ + \"static/media/rocket.db37a521.svg\";"],"sourceRoot":""}